---
title: "Web scraping MLB Data"
format:
  html: default
editor_options: 
  chunk_output_type: console
---
```{r}
#| include: FALSE

library(stringr)
library(rvest)
library(httr)
library(tidyverse)
```

```{r}
year <- 2023

url <- str_c("https://www.baseball-reference.com/awards/awards_", year, ".shtml")

robotstxt::paths_allowed(url)

mvp <- read_html(url)


mvp_tables <- mvp |>
  html_table()

mvp_voting <- mvp_tables[[1]]

mvp_col_names <- c("Rank", "Name", "Team", "Vote_PTS", "First_Place", "Share", "WAR", "BS_G", "AB", "R", "BS_H", "BS_HR", "RBI", "SB", "BS_BB", "BA", "OBP", "SLG", "OPS", "W", "L", "ERA", "WHIP", "PS_G", "GS", "SV", "IP", "PS_H", "PS_HR", "PS_BB","SO")

mvp_voting_2023 <- mvp_voting |>
  setNames(mvp_col_names) |>
  select(-Rank) |>
  slice(2) |>
  mutate(Year = year,
         Share = str_replace(Share, "%", ""),
         Share = as.numeric(Share),
         across(c("Vote_PTS", "First_Place", "WAR", "BS_G", "AB", "R", "BS_H", "BS_HR", "RBI", "SB", "BS_BB", "BA", "OBP", "SLG", "OPS", "W", "L", "ERA", "WHIP", "PS_G", "GS", "SV", "IP", "PS_H", "PS_HR", "PS_BB", "SO"), ~as.numeric(.)))
```

```{r}
get_mvp_by_year <- function(year) {
  
  url <- str_c("https://www.baseball-reference.com/awards/awards_", year, ".shtml")
  
  print(url)
  
  robotstxt::paths_allowed(url)
  
  mlb_html <- read_html(url)
  
  tables <- mlb_html |>
    html_nodes(css = "table") |>
    html_table()
  
  mvp_voting <- tables[[1]]
  
  mvp_col_names <- c("Rank", "Name", "Team", "Vote_PTS", "First_Place", "Share", "WAR", "BS_G", "AB", "R", "BS_H", "BS_HR", "RBI", "SB", "BS_BB", "BA", "OBP", "SLG", "OPS", "W", "L", "ERA", "WHIP", "PS_G", "GS", "SV", "IP", "PS_H", "PS_HR", "PS_BB","SO")
  
  mvp_voting <- mvp_voting |>
    setNames(mvp_col_names) |>
    select(-Rank) |>
    slice(2) |>
    mutate(Year = year,
           Share = str_replace(Share, "%", ""),
           Share = as.numeric(Share),
           across(c("Vote_PTS", "First_Place", "WAR", "BS_G", "AB", "R", "BS_H", "BS_HR", "RBI", "SB", "BS_BB", "BA", "OBP", "SLG", "OPS", "W", "L", "ERA", "WHIP", "PS_G", "GS", "SV", "IP", "PS_H", "PS_HR", "PS_BB", "SO"), ~as.numeric(.))) |>
    select("Year","Name", "Team", "Vote_PTS", "First_Place", "WAR", "BS_G", "AB", "R", "BS_H", "BS_HR", "RBI", "SB", "BS_BB", "BA", "OBP", "SLG", "OPS", "W", "L", "ERA", "WHIP", "PS_G", "GS", "SV", "IP", "PS_H", "PS_HR", "PS_BB", "SO")
  
  mvp_voting
}
```

```{r}
mvp_voting_2023 <- get_mvp_by_year(2023)

mvp_voting_full <- mvp_voting_2023

for (year in c(1911:1914, 1922:2023)) {
  mvp_voting_full <- mvp_voting_full |>
    bind_rows(get_mvp_by_year(year))
  
  # Need to wait: Error Code 429 - Too many requests
  Sys.sleep(5)
}

mvp_voting_full <- mvp_voting_full |>
  distinct()

write.csv(mvp_voting_full, "./data/mvp_voting.csv")
```


```{r}
for (year in c(1928:2022)) {
  mvp_voting_full <- mvp_voting_full |>
    bind_rows(get_mvp_by_year(year))
}

write.csv(mvp_voting_full, "./data/mvp_voting_pt2.csv")
```

```{r}
for (year in c(1958:2022)) {
  mvp_voting_full <- mvp_voting_full |>
    bind_rows(get_mvp_by_year(year))
  
  Sys.sleep(5)
}

write.csv(mvp_voting_full, "./data/mvp_voting_pt3.csv")
```


```{r}
MVP_DAT<- read_html("https://www.baseball-reference.com/awards/mvp.shtml") |>
  html_nodes("table") %>%
  .[[1]] %>%  
  html_table()

CYA_DAT<- read_html("https://www.baseball-reference.com/awards/cya.shtml") |>
  html_nodes("table") %>%
  .[[1]] %>%  
  html_table()

ROY_DAT<- read_html("https://www.baseball-reference.com/awards/roy.shtml") |>
  html_nodes("table") %>%
  .[[1]] %>%  
  html_table()


colnames(MVP_DAT) <- as.character(MVP_DAT[1,])
colnames(ROY_DAT) <- as.character(ROY_DAT[1,])
MVP_DAT<- MVP_DAT|>
  filter(Year!= "Year")|>
  filter(Year >= 1911)|>
  mutate(Pitcher = ifelse(IP > 10, TRUE, FALSE),Year = as.numeric(Year), across(.cols = WAR:SO, .fns = ~as.numeric(as.character(.))) )
MVP_DAT

ROY_DAT<- ROY_DAT|>
   filter(Year!= "Year")|>
  filter(Year >= 1911)|>
  mutate(Pitcher = ifelse(IP > 10, TRUE, FALSE),Year = as.numeric(Year), across(.cols = WAR:SO, .fns = ~as.numeric(as.character(.))) )

ROY_DAT


CYA_DAT<- CYA_DAT|>
  mutate(Year= as.numeric(Year), across(.cols = WAR:SO, .fns = ~as.numeric(as.character(.))))|>
  filter(Year>1900)
  

CYA_DAT


selected_player<- MVP_DAT[3,]

selected_player

MVP_DAT|>
  filter(Pitcher== F)|>
  ggplot(aes(x= SLG))+
  geom_histogram()+
  geom_vline(xintercept = selected_player$SLG, col= "red", lwd= 2)
  

library(ggplot2)

MVP_DAT|>
  filter(Pitcher== FALSE)|>
  ggplot(aes(x= Year, y= SLG))+
  geom_point()+
  geom_smooth(se=F, color= "blue", method= lm)


CYA_DAT|>
  mutate(Reliver= ifelse(SV>10, 1, 0))|>
  mutate(decade= str_extract(Year, "^\\d\\d\\d"))|>
  mutate(
    decade = case_when(
      decade=="194"~"40's",
      decade=="195"~"50's",
      decade=="196"~"60's",
      decade=="197"~"70's", 
      decade=="198" ~"80's",
      decade== "199"~ "90's",
      decade=="200" ~ "2000's",
      decade=="201"~"2010's",
      decade== "202"~"2020's",
    ))|>
   mutate(decade= fct_relevel(factor(decade), "50's", "60's", "70's", "80's", "90's"))|>
  ggplot(aes(x= decade, y= ERA))+
  geom_boxplot()
```

