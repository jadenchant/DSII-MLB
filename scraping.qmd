---
title: "Web scraping MLB Data"
format:
  html: default
editor_options: 
  chunk_output_type: console
---
```{r}
#| include: FALSE

library(tidyverse)
library(stringr)
library(rvest)
library(httr)
```

```{r}
year <- 2023

url <- str_c("https://www.baseball-reference.com/awards/awards_", year, ".shtml")

robotstxt::paths_allowed(url)

mvp <- read_html(url)


mvp_tables <- mvp |>
  html_table()

mvp_voting <- mvp_tables[[1]]

mvp_col_names <- c("Rank", "Name", "Team", "Vote_PTS", "First_Place", "Share", "WAR", "BS_G", "AB", "R", "BS_H", "BS_HR", "RBI", "SB", "BS_BB", "BA", "OBP", "SLG", "OPS", "W", "L", "ERA", "WHIP", "PS_G", "GS", "SV", "IP", "PS_H", "PS_HR", "PS_BB","SO")

mvp_voting_2023 <- mvp_voting |>
  setNames(mvp_col_names) |>
  select(-Rank) |>
  slice(2) |>
  mutate(Year = year,
         Share = str_replace(Share, "%", ""),
         Share = as.numeric(Share),
         across(c("Vote_PTS", "First_Place", "WAR", "BS_G", "AB", "R", "BS_H", "BS_HR", "RBI", "SB", "BS_BB", "BA", "OBP", "SLG", "OPS", "W", "L", "ERA", "WHIP", "PS_G", "GS", "SV", "IP", "PS_H", "PS_HR", "PS_BB", "SO"), ~as.numeric(.)))
```

```{r}
get_mvp_by_year <- function(year) {
  
  url <- str_c("https://www.baseball-reference.com/awards/awards_", year, ".shtml")
  
  print(url)
  
  robotstxt::paths_allowed(url)
  
  mvp <- read_html(url)
  
  mvp_tables <- mvp |>
    html_table()
  
  mvp_voting <- mvp_tables[[1]]
  
  mvp_col_names <- c("Rank", "Name", "Team", "Vote_PTS", "First_Place", "Share", "WAR", "BS_G", "AB", "R", "BS_H", "BS_HR", "RBI", "SB", "BS_BB", "BA", "OBP", "SLG", "OPS", "W", "L", "ERA", "WHIP", "PS_G", "GS", "SV", "IP", "PS_H", "PS_HR", "PS_BB","SO")
  
  mvp_voting <- mvp_voting |>
    setNames(mvp_col_names) |>
    select(-Rank) |>
    slice(2) |>
    mutate(Year = year,
           Share = str_replace(Share, "%", ""),
           Share = as.numeric(Share),
           across(c("Vote_PTS", "First_Place", "WAR", "BS_G", "AB", "R", "BS_H", "BS_HR", "RBI", "SB", "BS_BB", "BA", "OBP", "SLG", "OPS", "W", "L", "ERA", "WHIP", "PS_G", "GS", "SV", "IP", "PS_H", "PS_HR", "PS_BB", "SO"), ~as.numeric(.))) |>
    select("Year","Name", "Team", "Vote_PTS", "First_Place", "WAR", "BS_G", "AB", "R", "BS_H", "BS_HR", "RBI", "SB", "BS_BB", "BA", "OBP", "SLG", "OPS", "W", "L", "ERA", "WHIP", "PS_G", "GS", "SV", "IP", "PS_H", "PS_HR", "PS_BB", "SO")
  
  mvp_voting
}
```

```{r}
mvp_voting_2023 <- get_mvp_by_year(2023)

mvp_voting_full <- mvp_voting_2023

for (year in c(1911:1914, 1922:2022)) {
  mvp_voting_full <- mvp_voting_full |>
    bind_rows(get_mvp_by_year(year))
}

write.csv(mvp_voting_full, "./data/mvp_voting_pt1.csv")

# Export to csv
# Error Code 429 - Too many requests
```


```{r}
for (year in c(1928:2022)) {
  mvp_voting_full <- mvp_voting_full |>
    bind_rows(get_mvp_by_year(year))
}

write.csv(mvp_voting_full, "./data/mvp_voting_pt2.csv")
```




```{r}
#| include: false

# first_columns <- html_nodes(mlb, css = ".left")[2:3] |>
#   html_text()

# other_columns <- html_nodes(mlb, css = ".right")[2:29] |>
#   html_text() |>
#   str_subset("[^\\s]")

# mvp_voting <- tibble(
#   name = first_columns[1],
#   team = first_columns[2],
#   voting_pts = as.numeric(other_columns[1]),
#   first_place = as.numeric(other_columns[2]),
#   share = as.numeric(str_remove(other_columns[3], "%")),
# )
```

